@import './base.css';
//colors
$colors: (
        "primary": #db9e3f,
        "white": #ffffff,
        "black": #000000,
        "dark":#222222,
        "dark-1":#343440,
        "grey": #999999,
        "light":#f9f9f9,
);

//循环生成颜色类
@each $name, $color in $colors {
  .color-#{$name} {
    color: $color;
  }
  .bg-#{$name} {
    background-color: $color;
  }
}

;

//text
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var;
  }
}

;

//font-size
$base-font-size: 1rem;
$font-sizes: (
        xs: 0.7692, //10px
        sm: 0.9231, //12px
        md: 1, //13px
        lg:1.077, //14px
        xl:1.231 //16px
);
@each $name, $size in $font-sizes {
  .font-#{$name} {
    font-size: $base-font-size * $size;
  }
}

//flex
.d-flex {
  display: flex;
}

.flex-column {
  flex-direction: column;
}

$flex-jc: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around
);
@each $name, $value in $flex-jc {
  .jc-#{$name} {
    justify-content: $value;
  }
}

$flex-ai: (
        start: flex-start,
        end: flex-end,
        center: center,
        stretch: stretch,
        baseline: baseline
);
@each $name, $value in $flex-ai {
  .ai-#{$name} {
    align-items: $value;
  }
}

.flex-1 {
  flex: 1;
}

//spacing
$spacing-types: (m:margin, p:padding);
$spacing-directions: (t:top, r:right, b:bottom, l:left);
$spacing-base-size: 1rem;
$spacing-sizes: (0:0, 1:0.25, 2:0.5, 3:0.75, 4:1, 5:1.25, 6:1.5, 7:1.75, 8:2);
@each $typeKey, $type in $spacing-types {
  // .m-1
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size;
    }
  }
  // .mx-1 , .my-1
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $spacing-base-size;
      #{$type}-right: $size * $spacing-base-size;
    }
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $spacing-base-size;
      #{$type}-bottom: $size * $spacing-base-size;
    }
  }
  // .mt-1
  @each $directionKey, $direction in $spacing-directions {
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size;
      }
    }
  }
}
